$date
	Mon Mar 31 21:25:47 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module data_path_TB $end
$var wire 8 ! to_memory [7:0] $end
$var wire 8 " address [7:0] $end
$var wire 8 # IR_out [7:0] $end
$var wire 4 $ CCR_Result [3:0] $end
$var reg 3 % ALU_Sel [2:0] $end
$var reg 1 & A_Load $end
$var reg 1 ' B_Load $end
$var reg 2 ( Bus1_Sel [1:0] $end
$var reg 2 ) Bus2_Sel [1:0] $end
$var reg 1 * CCR_Load $end
$var reg 1 + Clk $end
$var reg 1 , IR_Load $end
$var reg 1 - MAR_Load $end
$var reg 1 . PC_Inc $end
$var reg 1 / PC_Load $end
$var reg 1 0 Reset $end
$var reg 8 1 from_memory [7:0] $end
$scope module dt_pth00 $end
$var wire 3 2 ALU_Sel [2:0] $end
$var wire 1 & A_Load $end
$var wire 1 ' B_Load $end
$var wire 2 3 Bus1_Sel [1:0] $end
$var wire 2 4 Bus2_Sel [1:0] $end
$var wire 1 * CCR_Load $end
$var wire 1 + Clk $end
$var wire 1 , IR_Load $end
$var wire 1 - MAR_Load $end
$var wire 1 . PC_Inc $end
$var wire 1 / PC_Load $end
$var wire 1 0 Reset $end
$var wire 8 5 from_memory [7:0] $end
$var wire 4 6 NZVC [3:0] $end
$var wire 8 7 ALU_Result [7:0] $end
$var reg 8 8 A [7:0] $end
$var reg 8 9 B [7:0] $end
$var reg 8 : Bus1 [7:0] $end
$var reg 8 ; Bus2 [7:0] $end
$var reg 4 < CCR_Result [3:0] $end
$var reg 8 = IR [7:0] $end
$var reg 8 > IR_out [7:0] $end
$var reg 8 ? MAR [7:0] $end
$var reg 8 @ PC [7:0] $end
$var reg 8 A address [7:0] $end
$var reg 8 B to_memory [7:0] $end
$scope module alu $end
$var wire 8 C A [7:0] $end
$var wire 3 D ALU_Sel [2:0] $end
$var wire 8 E B [7:0] $end
$var reg 4 F NZVC [3:0] $end
$var reg 8 G Result [7:0] $end
$upscope $end
$scope begin A_REGISTER $end
$upscope $end
$scope begin B_REGISTER $end
$upscope $end
$scope begin CONDITION_CODE_REGISTER $end
$upscope $end
$scope begin INSTRUCTION_REGISTER $end
$upscope $end
$scope begin MEMORY_ADDRESS_REGISTER $end
$upscope $end
$scope begin MUX_BUS1 $end
$upscope $end
$scope begin MUX_BUS2 $end
$upscope $end
$scope begin PROGRAM_COUNTER $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 G
b100 F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
bx >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b100 6
b0 5
b10 4
b0 3
b0 2
b0 1
00
0/
0.
0-
0,
0+
0*
b10 )
b0 (
0'
0&
b0 %
b0 $
bx #
b0 "
b0 !
$end
#50000
10
#100000
1+
#150000
b1011 ;
0+
1&
b1011 1
b1011 5
#200000
b0 6
b0 F
b1011 7
b1011 G
b1011 8
b1011 C
1+
#250000
